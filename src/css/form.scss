/*! https://github.com/oscarpalmer/oui */

@use 'mixins.scss' as mixins;

@mixin focus() {
	--oui-border-value: var(--oui-blue-6);
	--oui-foreground-value: inherit;
	--oui-outline-percentage: 75%;
	--oui-outline-value: var(--oui-blue-6);
}

@mixin hover() {
	--oui-border-value: var(--oui-blue-4);
	--oui-foreground-percentage: 50%;
	--oui-foreground-value: inherit;
	--oui-outline-percentage: 90%;
	--oui-outline-value: var(--oui-blue-6);
}

@mixin input {
	--oui-background-percentage: 0%;
	--oui-foreground-percentage: 0%;

	@include outlined;

	background-color: color-mix(in oklab, var(--oui-background-value), transparent var(--oui-background-percentage));
	border: 1px solid var(--oui-border-value, var(--oui-gray-3));
	box-shadow: inset 0 1px 2px 0 color-mix(in oklab, var(--oui-gray-10), transparent 75%);
	color: color-mix(
			in oklab,
			var(--oui-foreground-value, inherit),
			transparent var(--oui-foreground-percentage)
		);
}

@mixin invalid() {
	--oui-border-value: var(--oui-red-6);
	--oui-foreground-value: var(--oui-red-9);
	--oui-outline-percentage: 75%;
	--oui-outline-value: var(--oui-red-6);
}

@mixin outlined {
	--oui-outline-percentage: 100%;
	--oui-outline-value: var(--oui-blue-6);

	outline: 4px solid
		color-mix(
			in oklab,
			var(--oui-outline-value),
			transparent var(--oui-outline-percentage)
		);
	outline-offset: 0;
	transition: 0.125s ease-in-out;
}

@mixin valid() {
	--oui-border-value: var(--oui-green-6);
	--oui-foreground-value: var(--oui-green-9);
	--oui-outline-percentage: 75%;
	--oui-outline-value: var(--oui-green-6);
}

:where(.oui-fieldset) {
	padding: 1em;
	border: 1px solid var(--oui-gray-3);
	border-radius: 0.25em;
}

.oui-input {
	:where(&:not([type='range' i])) {
		--oui-background-value: var(--oui-absolute);

		@include input;

		padding: 0.5em 0.75em;
		border-radius: 0.25em;
	}

	:where(&:not([type='range' i], select[multiple], textarea)) {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	:where(&:is([list])) {
		&::-webkit-calendar-picker-indicator {
			display: none !important;
		}
	}

	:where(&:is([type='color' i])) {
		padding: 0;
	}

	:where(&:is([type='date' i],
			[type='datetime-local' i],
			[type='month' i],
			[type='number' i],
			[type='tel' i],
			[type='time' i],
			[type='url' i],
			[type='week' i])) {
		font-variant-numeric: tabular-nums;
	}

	:where(&:is([type='file' i])) {
		padding-left: .5em;

		&::file-selector-button {
			@include mixins.button;

			--oui-outline-value: var(--oui-grey-6);

			margin: 0 .75em 0 0;
			font-size: .75em;
			cursor: pointer;
		}
	}

	:where(&:is([type='range' i])) {
		appearance: none;
		outline: none;

		&::range-track {
			@include input;

			appearance: none;
			width: 100%;
			height: 0.75em;
			border-radius: .75em;
			position: relative;
		}

		&::range-thumb {
			--oui-background-percentage: 0%;
			--oui-background-value: var(--oui-blue-6);

			@include outlined;

			appearance: none;
			width: 1.25em;
			height: 1.25em;
			background-color:
				color-mix(
					in oklab,
					var(--oui-background-value),
					transparent var(--oui-background-percentage)
				);
			border: 2px solid var(--oui-absolute);
			border-radius: 1.25em;
			box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.125);
			cursor: pointer;
		}

		&::-webkit-slider-thumb {
			position: relative;
			top: 50%;
			transform: translateY(-50%);
		}
	}

	:where(&.oui-validatable:not([disabled], [readonly], [aria-disabled='true' i]):is(:user-invalid, [aria-invalid='true' i])) {
		@include invalid;

		&::file-selector-button {
			--oui-background-value: var(--oui-red-1);
			--oui-foreground-value: var(--oui-red-8);
			--oui-outline-value: var(--oui-red-6);
		}

		&::range-thumb {
			--oui-background-value: var(--oui-red-6);
		}

		&::range-track {
			@include invalid;
		}
	}

	:where(&.oui-validatable:not([disabled], [readonly], [aria-disabled='true' i]):is(:user-valid, [aria-invalid='false' i])) {
		@include valid;

		&::file-selector-button {
			--oui-background-value: var(--oui-green-1);
			--oui-foreground-value: var(--oui-green-8);
			--oui-outline-value: var(--oui-green-6);
		}

		&::range-track {
			@include valid;
		}

		&::range-thumb {
			--oui-background-value: var(--oui-green-6);
		}
	}

	:where(&:not([disabled], [readonly], [aria-disabled="true" i])) {
		&::-webkit-calendar-picker-indicator {
			outline: 4px solid transparent;
			outline-offset: 2px;
			border-radius: 2em;
			transition: .125s ease-in-out;
			cursor: pointer;

			@media (hover: hover) {
				&:hover {
					outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 75%);
				}
			}

			&:focus {
				outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 75%);
			}
		}
	}

	:where(&:not([disabled], [readonly], [aria-disabled="true" i]):focus),
	:where(&:not([disabled], [readonly], [aria-disabled="true" i]):focus-within) {
		@include focus;

		&::file-selector-button {
			--oui-background-value: var(--oui-blue-1);
			--oui-foreground-value: var(--oui-blue-8);
			--oui-outline-value: var(--oui-blue-6);
		}

		&::range-thumb,
		&::range-track {
			@include focus;
		}

		&::range-thumb {
			--oui-background-value: var(--oui-blue-6);

			box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.25);
		}
	}

	@media (hover: hover) {
		:where(&:not([disabled], [aria-disabled='true' i]):hover) {
			@include hover;

			&::file-selector-button {
				--oui-background-value: var(--oui-blue-1);
				--oui-foreground-value: var(--oui-blue-8);
				--oui-outline-value: var(--oui-blue-6);
			}

			&::range-thumb {
				--oui-background-value: var(--oui-blue-5);
			}

			&::range-track {
				@include hover;
			}
		}
	}

	:where(&[disabled], &[readonly], &[aria-disabled='true' i]) {
		--oui-foreground-percentage: 25%;

		font-style: italic;
	}

	:where(&:is([disabled], [readonly], [aria-disabled='true' i]):focus) {
		--oui-outline-percentage: 75%;
	}

	:where(&[disabled], &[aria-disabled='true' i]) {
		--oui-background-percentage: 50%;

		&::file-selector-button,
		&::range-thumb {
			--oui-background-value: var(--oui-gray-1);

			cursor: default;
		}

		&::range-track {
			--oui-background-percentage: 50%;
			--oui-background-value: var(--oui-gray-0);
		}

		&::-webkit-calendar-picker-indicator {
			color: red;
			stroke: red;
		}
	}
}

:where(select.oui-input, .oui-input[list]) {
	padding-right: 2em;
	background-position: right 0.5em center;
}

select.oui-input:is([multiple]) {
	:where(&) {
		--oui-off: attr(oui-off);
		--oui-on: attr(oui-on, '\2713');

		padding: 0;
	}

	:where(& > option) {
		padding: 0.5em 0.75em;
	}

	:where(&[oui-off] > option) {
		&::before {
			content: var(--oui-off);
			margin: 0 0.75em 0 0;
		}
	}

	:where(& > option:nth-of-type(2n)) {
		background-color: color-mix(in oklab, var(--oui-blue-0), transparent 33%);
	}

	:where(& > option:checked) {
		background-color: var(--oui-blue-2);
		color: var(--oui-blue-9);

		&::before {
			content: var(--oui-on);
			margin: 0 .75em 0 0;
		}
	}
}

:where(textarea.oui-input) {
	min-height: 4em;
	resize: vertical;
	transition: all 0.125s ease-in-out, height 0s;
}

:where(.oui-label, .oui-legend) {
	font-size: 0.875rem;
	font-weight: bold;
}

:where(.oui-label) {
	cursor: pointer;
	transition: .125s ease-in-out;

	@media (hover: hover) {
		:where(&[for]:hover) {
			color: var(--oui-blue-8);
		}
	}
}

:where(.oui-legend) {
	padding: 0.5em;
	border: 1px solid var(--oui-gray-3);
	border-radius: 0.25em;
}

:where(.oui-switch, .oui-toggle) {
	--oui-background-percentage: 50%;
	--oui-background-value: var(--oui-gray-1);
	--oui-border-value: var(--oui-gray-3);
	--oui-foreground-percentage: 0%;
	--oui-foreground-value: var(--oui-gray-8);
	--oui-outline-percentage: 100%;
	--oui-outline-value: var(--oui-blue-6);
	--oui-shadow-percentage: 85%;
	--oui-shadow-value: var(--oui-gray-10);

	position: relative;
	cursor: pointer;

	&::before,
	&::after {
		display: inline-block;
		font-family: system-ui, sans-serif;
		position: absolute;
		transition: 0.125s ease-in-out;
		pointer-events: none;
	}

	&::before {
		background-color: color-mix(in oklab, var(--oui-background-value), transparent var(--oui-background-percentage));
		box-shadow: inset 0 1px 2px 0 color-mix(in oklab, var(--oui-shadow-value), transparent var(--oui-shadow-percentage));
		outline: 4px solid color-mix(
			in oklab,
			var(--oui-outline-value),
			transparent var(--oui-outline-percentage)
		);
		outline-offset: 0;
		border: 1px solid var(--oui-border-value);
	}

	&::after {
		color: color-mix(in oklab, var(--oui-foreground-value), transparent var(--oui-foreground-percentage));
	}
}

.oui-switch {
	:where(&) {
		padding: 0 3em 0 0;

		&::before {
			content: '';
			width: 2.5em;
			height: 1.5em;
			border-radius: 3em;
			right: 0;
		}

		&::after {
			content: attr(oui-off, '\2715');
			width: 1.5em;
			height: 1.5em;
			background-color: var(--oui-absolute);
			border-radius: 1.5em;
			box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.125);
			font-size: 0.75em;
			font-weight: bold;
			line-height: 1.5em;
			text-align: center;
			top: 0.25em;
			right: 1.5em;
		}
	}

	:where(&:has(input:checked)) {
		--oui-foreground-percentage: 0%;
		--oui-foreground-value: var(--oui-blue-8);

		&::after {
			content: attr(oui-on, '\2713');
			box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.25);
			right: 0.25em;
		}
	}
}

.oui-toggle {
	:where(&) {
		--oui-background-percentage: 100%;
		--oui-border-value: var(--oui-gray-4);

		padding: 0 0 0 2em;

		&::before {
			content: '';
			width: 1.5em;
			height: 1.5em;
			inset: 0 auto auto 0;
		}

		&::after {
			opacity: 0;
		}
	}

	:where(&:has(input[type='checkbox' i])) {
		--oui-foreground-percentage: 0%;
		--oui-foreground-value: white;

		&::before {
			border-radius: 0.25em;
		}

		&::after {
			content: attr(oui-on, '\2713');
			width: 1.5em;
			height: 1.5em;
			text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
			font-weight: bold;
			line-height: 1.5em;
			text-align: center;
			inset: 0 auto auto 0;
		}
	}

	:where(&:has(input[type='radio' i])) {
		position: relative;

		&::before,
		&::after {
			border-radius: 50%;
		}

		&::after {
			content: '';
			width: 0.75em;
			height: 0.75em;
			background-color: var(--oui-absolute);
			box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);
			inset: 0.375em auto auto 0.375em;
		}
	}

	:where(&:has(input:checked)) {
		&::after {
			opacity: 1;
		}
	}
}

.oui-switch,
.oui-toggle {
	:where(&:has(input:checked)) {
		--oui-background-percentage: 25%;
		--oui-background-value: var(--oui-blue-6);
		--oui-border-value: var(--oui-blue-6);
		--oui-shadow-percentage: 50%;
		--oui-shadow-value: var(--oui-blue-8);
	}

	:where(&:focus-within) {
		--oui-border-value: var(--oui-blue-6);
		--oui-outline-percentage: 75%;

		color: var(--oui-blue-8);
	}

	:where(&:has(input:not([disabled], [aria-disabled='true' i])):focus-within) {
		--oui-background-percentage: 50%;
	}

	@media (hover: hover) {
		:where(&:has(input:not([disabled], [aria-disabled='true' i])):hover) {
			--oui-border-value: var(--oui-blue-4);
			--oui-outline-percentage: 90%;
			--oui-outline-value: var(--oui-blue-6);

			color: var(--oui-blue-8);
		}

		:where(&:has(input:not([disabled], [aria-disabled='true' i]):is(:checked)):hover) {
			--oui-background-percentage: 50%;
			--oui-background-value: var(--oui-blue-6);
		}
	}

	:where(&:has(input[disabled], input[aria-disabled='true' i])) {
		--oui-background-percentage: 50%;
		--oui-background-value: var(--oui-gray-0);
		--oui-border-value: var(--oui-gray-3);
		--oui-foreground-percentage: 25%;
		--oui-foreground-value: currentColor;

		color: color-mix(in oklab, var(--oui-foreground-value), transparent var(--oui-foreground-percentage));
		font-style: italic;
		cursor: default;

		&::after,
		&::before {
			font-style: normal;
		}

		&::after {
			box-shadow: 0 0 0 1px var(--oui-gray-3);
			text-shadow: none;
		}
	}
}

:where(label.oui-switch, label.oui-toggle) {
	display: inline-block;
	line-height: 1.5;
}

:where(.oui-switch input, .oui-toggle input) {
	@include mixins.visuallyHidden;
}
