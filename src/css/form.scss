@use 'mixins.scss' as mixins;

:where(.oui-fieldset) {
	padding: 1em;
	border: 1px solid var(--oui-gray-3);
	border-radius: 0.25em;
}

.oui-input {
	:where(&) {
		padding: 0.5em 0.75em;
		outline: 3px solid transparent;
		outline-offset: 0;
		background-color: var(--oui-absolute);
		border-color: var(--oui-gray-3);
		border-radius: 0.25em;
		box-shadow: inset 0 1px 2px 0
			color-mix(in oklab, var(--oui-gray-10), transparent 80%);
		transition: 0.125s ease-in-out;
	}

	:where(&:not(textarea)) {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	:where(
			&:is(
					[type='date'],
					[type='datetime-local'],
					[type='month'],
					[type='number'],
					[type='tel'],
					[type='time'],
					[type='url'],
					[type='week']
				)
		) {
		font-variant-numeric: tabular-nums;
	}

	:where(
			&.oui-validateable:not([disabled], [aria-disabled='true']):is(
					:user-invalid,
					[aria-invalid='true']
				)
		) {
		outline-color: color-mix(in oklab, var(--oui-red-6), transparent 60%);
		border-color: var(--oui-red-6);
	}

	:where(
			&.oui-validateable:not([disabled], [aria-disabled='true']):is(
					:user-valid,
					[aria-invalid='false']
				)
		) {
		outline-color: color-mix(in oklab, var(--oui-green-6), transparent 60%);
		border-color: var(--oui-green-6);
	}

	:where(&:not([disabled], [aria-disabled='true']):focus) {
		outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 60%);
		border-color: var(--oui-blue-6);
	}

	@media (hover: hover) {
		:where(&:not([disabled], [aria-disabled='true']):hover) {
			outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 80%);
			border-color: var(--oui-blue-6);
		}
	}

	:where(&[readonly]) {
		color: color-mix(in oklab, currentColor, transparent 12.5%);
	}

	:where(&[disabled], &[aria-disabled='true']) {
		background-color: color-mix(in oklab, var(--oui-gray-0), transparent 50%);
		color: color-mix(in oklab, currentColor, transparent 25%);
	}
}

:where(select.oui-input) {
	padding-right: 2em;
	background-position: right 0.5em center;
}

:where(textarea.oui-input) {
	min-height: 4em;
	resize: vertical;
	transition: all 0.125s ease-in-out, height 0s;
}

:where(.oui-label, .oui-legend) {
	font-size: 0.875rem;
	font-weight: bold;
}

:where(.oui-label) {
	cursor: pointer;
}

:where(.oui-legend) {
	padding: 0.5em;
	border: 1px solid var(--oui-gray-3);
	border-radius: 0.25em;
}

:where(.oui-switch, .oui-toggle) {
	position: relative;
	cursor: pointer;

	&::before,
	&::after {
		font-family: system-ui, sans-serif;
		position: absolute;
		transition: 0.125s ease-in-out;
		pointer-events: none;
	}

	&::before {
		outline: 3px solid transparent;
		outline-offset: 0;
	}
}

.oui-switch {
	:where(&) {
		padding: 0 3em 0 0;

		&::before {
			content: '';
			width: 2.5em;
			height: 1.5em;
			display: inline-block;
			background-color: var(--oui-gray-0);
			border: 1px solid var(--oui-gray-3);
			border-radius: 3em;
			right: 0;
		}

		&::after {
			content: '\2715';
			width: 1.5em;
			height: 1.5em;
			background-color: var(--oui-absolute);
			border-radius: 1.5em;
			box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.125);
			color: var(--oui-gray-8);
			font-size: 0.75em;
			font-weight: bold;
			line-height: 1.5em;
			text-align: center;
			top: 0.25em;
			right: 1.5em;
		}
	}

	:where(&:has(input:checked)) {
		&::after {
			content: '\2713';
			box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.25);
			color: var(--oui-blue-8);
			right: 0.25em;
		}
	}
}

.oui-toggle {
	:where(&) {
		padding: 0 0 0 2em;

		&::before {
			content: '';
			width: 1.5em;
			height: 1.5em;
			display: inline-block;
			background-color: transparent;
			border: 1px solid var(--oui-gray-4);
			inset: 0 auto auto 0;
		}

		&::after {
			opacity: 0;
		}
	}

	:where(&:has(input[type='checkbox'])) {
		&::before {
			border-radius: 0.25em;
		}

		&::after {
			content: '\2713';
			width: 1.5em;
			height: 1.5em;
			color: white;
			text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
			font-weight: bold;
			line-height: 1.5em;
			text-align: center;
			inset: 0 auto auto 0;
		}
	}

	:where(&:has(input[type='radio'])) {
		&::before,
		&::after {
			border-radius: 50%;
		}

		&::after {
			content: '';
			width: 0.75em;
			height: 0.75em;
			background-color: var(--oui-absolute);
			box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);
			inset: 0.375em auto auto 0.375em;
		}
	}

	:where(&:has(input:checked)) {
		&::after {
			opacity: 1;
		}
	}
}

.oui-switch,
.oui-toggle {
	:where(&:has(input:checked)) {
		&::before {
			background-color: var(--oui-blue-6);
			border-color: transparent;
		}
	}

	:where(&:has(input:not([disabled], [aria-disabled='true'])):focus-within) {
		color: var(--oui-blue-8);

		&::before {
			outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 60%);
			border-color: var(--oui-absolute);
		}
	}

	@media (hover: hover) {
		:where(&:has(input:not([disabled], [aria-disabled='true'])):hover) {
			color: var(--oui-blue-8);

			&::before {
				outline-color: color-mix(in oklab, var(--oui-blue-6), transparent 80%);
				border-color: var(--oui-blue-6);
			}
		}

		:where(
				&:has(input:not([disabled], [aria-disabled='true']):is(:checked)):hover
			)::before {
			background-color: color-mix(in oklab, var(--oui-blue-6), transparent 40%);
		}
	}

	:where(&:has(input[disabled], input[aria-disabled='true'])) {
		cursor: default;

		& {
			color: color-mix(in oklab, currentColor, transparent 25%);
		}

		&::after {
			color: color-mix(in oklab, currentColor, transparent);
		}

		&::before {
			background-color: color-mix(in oklab, var(--oui-gray-0), transparent 50%);
			border-color: var(--oui-gray-3);
		}

		&::after {
			box-shadow: 0 0 0 1px var(--oui-gray-3);
			text-shadow: none;
		}
	}
}

:where(label.oui-switch, label.oui-toggle) {
	display: inline-block;
	line-height: 1.5;
}

:where(.oui-switch input, .oui-toggle input) {
	@include mixins.visuallyHidden;
}
