/*! https://github.com/oscarpalmer/oui */

:where(.fill) {
	flex: 1;
}

:where(.flow, .stack) {
	display: flex;
}

:where(.flow) {
	flex-flow: row wrap;
	align-items: center;
	gap: var(--flow-gap, 1rem);
}

.flow {
	:where(&-large) {
		gap: var(--flow-gap-large, calc(2 * var(--flow-gap, 1rem)));
	}

	:where(&-nowrap) {
		flex-wrap: nowrap;
	}

	:where(&-small) {
		gap: var(--flow-gap-small, calc(0.5 * var(--flow-gap, 1rem)));
	}

	:where(&-text) {
		gap: var(--flow-gap-text, 1em);
	}
}

:where(.stack) {
	flex-flow: column nowrap;
	gap: var(--stack-gap, 1rem);
}

.stack {
	:where(&-large) {
		gap: var(--stack-gap-large, calc(2 * var(--stack-gap, 1rem)));
	}

	:where(&-small) {
		gap: var(--stack-gap-small, calc(0.5 * var(--stack-gap, 1rem)));
	}

	:where(&-text) {
		gap: var(--stack-gap-text, 1em);
	}
}

.flex {
	&-reverse {
		:where(&[class^='flow' i], &[class*=' flow' i]) {
			flex-direction: row-reverse;
		}

		:where(&[class^='stack' i], &[class*=' stack' i]) {
			flex-direction: column-reverse;
		}
	}
}

$alignmentOrigins: (
	c: 'content',
	i: 'items',
	s: 'self',
);

$alignmentValues: (
	c: 'center',
	fe: 'flex-end',
	fs: 'flex-start',
	s: 'stretch',
);

$justificationValues: (
	sa: 'space-around',
	sb: 'space-between',
	se: 'space-evenly',
);

$types: (
	a: 'align',
	j: 'justify',
);

@each $typeKey, $typeValue in $types {
	@each $alignmentOriginKey, $alignmentOriginValue in $alignmentOrigins {
		.flex-#{$typeKey}#{$alignmentOriginKey} {
			@each $alignmentValueKey, $alignmentValueValue in $alignmentValues {
				:where(&-#{$alignmentValueKey}) {
					#{$typeValue}-#{$alignmentOriginValue}: #{$alignmentValueValue};
				}
			}
		}
	}

	@each $justificationKey, $justificationValue in $justificationValues {
		:where(.flex-#{$typeKey}c-#{$justificationKey}) {
			#{$typeValue}-content: #{$justificationValue};
		}
	}
}
